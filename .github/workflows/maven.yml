name: Java CI and Deploy to Cloudsmith

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
permissions:
  contents: read
  id-token: write  # Necessary for GH Identity Provider to write the JWT token which Cloudsmith needs to read

env:
  CLOUDSMITH_ORG: globex-innovations
  #cloudsmith-test 
  #globex-innovations
  CLOUDSMITH_REPO: abigproduct-nonprod
  SERVICE: ci_abigproduct_service
  #oidc_ciara
  #ci_acme_service
  #oidc_ciara 


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1) Checkout
    - uses: actions/checkout@v4

    # 2) JDK
    - uses: actions/setup-java@v2
      with:
        java-version: "11"
        distribution: "adopt"

    # 3) Auth to Cloudsmith (read-only)
    #    Needed only if the repo is private.  If itâ€™s public, you can skip this step
    - name: Cloudsmith OIDC login (read only)
      uses: cloudsmith-io/cloudsmith-cli-action@v1.0.2
      with:
        oidc-namespace: ${{ env.CLOUDSMITH_ORG }}
        oidc-service-slug: ${{ env.SERVICE }}
        oidc-auth-only: "true"
        pip-install: false

    # 4) Write Maven settings.xml (mirror for dependency pulls)
    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0">
          <servers>
            <server>
              <id>cloudsmith</id>
              <username>${{ env.SERVICE }}</username>
              <password>${CLOUDSMITH_API_KEY}</password>
            </server>
          </servers>

          <mirrors>
            <mirror>
              <id>cloudsmith</id>
              <name>Cloudsmith mirror (all but central)</name>
              <url>https://maven.cloudsmith.io/${{ env.CLOUDSMITH_ORG }}/${{ env.CLOUDSMITH_REPO }}/</url>
              <mirrorOf>*,!central</mirrorOf>
            </mirror>
          </mirrors>
        </settings>
        EOF

    # 5) Build & test
    - name: Build with Maven
      run: mvn -B clean verify --settings ~/.m2/settings.xml -U
