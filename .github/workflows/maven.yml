name: Java CI and Deploy to Cloudsmith

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write   # needed for OIDC → Cloudsmith

env:
  CLOUDSMITH_ORG:  globex-innovations
  CLOUDSMITH_REPO: abigproduct-nonprod        # repo slug
  SERVICE:         ci_abigproduct_service     # OIDC service slug

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1 – checkout
    - uses: actions/checkout@v4

    # 2 – Temurin 17 (or keep 11 if you must)
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'

    # 3 – Fetch a short-lived Cloudsmith token via OIDC
    - name: Authenticate to Cloudsmith (OIDC)
      id: cloudsmith-auth
      uses: cloudsmith-io/cloudsmith-cli-action@v1
      with:
        oidc-namespace:   ${{ env.CLOUDSMITH_ORG }}
        oidc-service-slug: ${{ env.SERVICE }}
        oidc-auth-only:   'true'   # just get token, don’t upload files
        pip-install:      false

    # 4 – Generate settings.xml that Maven will auto-pick up
    - name: Write Maven settings.xml
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0">
  <servers>
    <server>
      <id>cloudsmith</id>
      <username>${{ env.SERVICE }}</username>
      <password>${{ steps.cloudsmith-auth.outputs.oidc-token }}</password>
    </server>
  </servers>
</settings>
EOF

    # 5 – Build, test and deploy (snapshot OR release)
    - name: Build & Deploy
      run: mvn --batch-mode deploy -U
