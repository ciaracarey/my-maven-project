trigger: none
- main            # run on pushes to main

# ──────────────────────────────
# Variables
# ──────────────────────────────
variables:
  # Cloudsmith service account slug
  SERVICE: azure_acme_service

  # Maven <server> id (must match <id> in pom.xml)
  CLOUDSMITH_SERVER_ID: central

  # Org / repo values are only here if you need them elsewhere
  CLOUDSMITH_ORG:  globex-innovations
  CLOUDSMITH_REPO: acme-nonprod

pool:
  vmImage: ubuntu-latest

# ──────────────────────────────
# Steps
# ──────────────────────────────
steps:
# 1) Check out code
- checkout: self

# 2) Write ~/.m2/settings.xml with service-account creds
- bash: |
    mkdir -p ~/.m2
    cat > ~/.m2/settings.xml <<EOF
    <settings>
      <servers>
        <server>
          <id>${CLOUDSMITH_SERVER_ID}</id>
          <username>${SERVICE}</username>
          <password>${CLOUDSMITH_API_KEY}</password>
        </server>
      </servers>
    </settings>
    EOF
  displayName: "Create Maven settings.xml"
  env:
    CLOUDSMITH_API_KEY: $(CLOUDSMITH_SERVICE_API_KEY)
    SERVICE: $(SERVICE)

# 3) Build, test, and deploy
- task: Maven@4
  displayName: "Maven clean-deploy"
  inputs:
    mavenPOMFile: 'pom.xml'
    goals: 'clean deploy'
    options: '-s $(HOME)/.m2/settings.xml -U'   # use the generated settings.xml
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
